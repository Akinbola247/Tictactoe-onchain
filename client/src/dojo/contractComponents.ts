/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export function defineContractComponents(world: World) {
  return {
	  Ercaallowance: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, owner: RecsType.BigInt, spender: RecsType.BigInt, amount: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Ercaallowance",
	          types: ["contractaddress","contractaddress","contractaddress","u256"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Ercbalance: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, account: RecsType.BigInt, amount: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Ercbalance",
	          types: ["contractaddress","contractaddress","u256"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Ercmeta: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, name: RecsType.BigInt, symbol: RecsType.BigInt, total_supply: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Ercmeta",
	          types: ["contractaddress","felt252","felt252","u256"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Board: (() => {
	    return defineComponent(
	      world,
	      { game_id: RecsType.BigInt, a_1: RecsType.BigInt, a_2: RecsType.BigInt, a_3: RecsType.BigInt, b_1: RecsType.BigInt, b_2: RecsType.BigInt, b_3: RecsType.BigInt, c_1: RecsType.BigInt, c_2: RecsType.BigInt, c_3: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Board",
	          types: ["felt252","felt252","felt252","felt252","felt252","felt252","felt252","felt252","felt252","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Fixed: (() => {
	    return defineComponent(
	      world,
	      { fixed_key: RecsType.BigInt, worldcount: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Fixed",
	          types: ["contractaddress","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Game: (() => {
	    return defineComponent(
	      world,
	      { game_id: RecsType.BigInt, winner: RecsType.BigInt, player_one_: RecsType.BigInt, player_two_: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Game",
	          types: ["felt252","felt252","contractaddress","contractaddress"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Gate: (() => {
	    return defineComponent(
	      world,
	      { constantkey: RecsType.BigInt, owner: RecsType.BigInt, token_address: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Gate",
	          types: ["contractaddress","contractaddress","contractaddress"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Moves: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, opponent: RecsType.BigInt, game_id: RecsType.BigInt, avatar_choice: RecsType.BigInt, move_one: RecsType.Number, move_two: RecsType.Number, move_three: RecsType.Number, move_four: RecsType.Number, move_five: RecsType.Number, counter: RecsType.Number, turn: RecsType.Boolean },
	      {
	        metadata: {
	          name: "Moves",
	          types: ["contractaddress","contractaddress","felt252","felt252","u32","u32","u32","u32","u32","u32","bool"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Players: (() => {
	    return defineComponent(
	      world,
	      { player_address: RecsType.BigInt, name_: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Players",
	          types: ["contractaddress","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  Response: (() => {
	    return defineComponent(
	      world,
	      { game_id: RecsType.BigInt, gameresponse: RecsType.BigInt },
	      {
	        metadata: {
	          name: "Response",
	          types: ["felt252","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
  };
}
